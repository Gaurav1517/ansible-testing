---
- name: Automate Git Setup and Push
  hosts: dev
  become: false
  vars:
    folder_name: "/ansible-project"
    repo_url: "git@github.com:Gaurav1517/ansible-testing.git"
    git_email: "gaurav.cloud000@gmail.com"
    ssh_key_path: "~/.ssh/id_ansible_rsa"
    project_path: "/home/{{ ansible_user }}/{{ folder_name }}"

  tasks:

    - name: Ensure Git is installed on RHEL/CentOS/Fedora
      dnf:
        name: git
        state: present
      become: true
      when: ansible_facts['os_family'] == "RedHat"

    - name: Copy project folder to remote
      copy:
        src: "/home/sysops/ansible-project"
        dest: "{{ project_path }}/"
        mode: '0755'
        owner: "{{ ansible_user }}"

    - name: Add GitHub to known_hosts
      known_hosts:
        name: github.com
        key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"
        path: "/home/{{ ansible_user }}/.ssh/known_hosts"
        state: present

    - name: Check if Git repo already initialized
      stat:
        path: "{{ project_path }}/.git"
      register: git_repo

    - name: Initialize Git repo (if not exists)
      shell: |
        cd "{{ project_path }}"
        git init
        git config user.email "{{ git_email }}"
        git config user.name "Gaurav Chauhan"
      args:
        executable: /bin/bash
      when: not git_repo.stat.exists

    - name: Check if remote origin is already set
      shell: |
        cd "{{ project_path }}"
        git remote get-url origin
      register: git_remote
      ignore_errors: true

    - name: Add remote origin (if not set)
      shell: |
        cd "{{ project_path }}"
        git remote add origin {{ repo_url }}
      when: git_remote.rc != 0
      args:
        executable: /bin/bash

    - name: Check if there are uncommitted changes
      shell: |
        cd "{{ project_path }}"
        git status --porcelain
      register: git_status
      changed_when: false

    - name: Add, commit only if there are changes
      shell: |
        cd "{{ project_path }}"
        git add .
        git commit -m "done ansible test"
      when: git_status.stdout != ""
      args:
        executable: /bin/bash

    - name: Push to origin (only if changes were committed)
      shell: |
        cd "{{ project_path }}"
        ssh-agent bash -c 'ssh-add {{ ssh_key_path }} || (echo "‚ùå ssh-add failed" && exit 1); git push -u origin main'
      when: git_status.stdout != ""
      args:
        executable: /bin/bash

